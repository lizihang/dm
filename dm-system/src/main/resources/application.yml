# 公共配置
spring:
  profiles:
    active: @active-profile@
  application:
    name: dm-admin
  # redis配置
  redis:
    host: 127.0.0.1
    port: 6379
    database: 1
  # 定时任务配置
  quartz:
    # 将任务等保存化到数据库
    job-store-type: jdbc
    # 程序结束时会等待quartz相关的内容结束
    wait-for-jobs-to-complete-on-shutdown: true
    # QuartzScheduler启动时更新己存在的Job,这样就不用每次修改targetObject后删除qrtz_job_details表对应记录
    overwrite-existing-jobs: true
    # 这里居然是个map，搞得智能提示都没有，佛了
    properties:
      org:
        quartz:
          # scheduler相关
          scheduler:
            # scheduler的实例名
            instanceName: scheduler
            instanceId: AUTO
          # 持久化相关
          jobStore:
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            # 表示数据库中相关表是QRTZ_开头的
            tablePrefix: QRTZ_
            useProperties: false
          # 线程池相关
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            # 线程数
            threadCount: 10
            # 线程优先级
            threadPriority: 5
  servlet:
    multipart:
      # 单文件上传大小
      max-file-size: 5MB
      # 总文件上传大小
      max-request-size: 10MB

mybatis:
  # classpath*:能加载多个路径下的资源文件
  mapper-locations: classpath*:com/dm/mapper/*.xml
  type-aliases-package: com.dm
  configuration:
    # mybatis 打印SQL到控制台
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    # 开启驼峰命名转换
    map-underscore-to-camel-case: true

logging:
  level:
    com.dm:

# TODO
dm:
  # 文件路径 示例（ Windows配置D:/dm/upload，Linux配置 /home/dm/upload）
  profile: D:/dm/upload




